name: CI-CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry (ACR)
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Define Image Tag
        run: echo "IMAGE_TAG=${{ secrets.ACR_LOGIN_SERVER }}/promocode:$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Build and push Docker image to ACR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/promocode:cache
          cache-to: type=inline

      - name: Store Image Tag for Deployment
        run: echo "IMAGE_TAG=${{ env.IMAGE_TAG }}" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set AKS Context
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          chmod 600 kubeconfig.yaml
          echo "Checking if kubeconfig.yaml exists:"
          ls -l kubeconfig.yaml
          echo "Checking kubeconfig.yaml content:"
          cat kubeconfig.yaml | head -20  # Print first 20 lines for debugging
          echo "Setting current context..."
          kubectl config use-context $(kubectl config get-contexts -o name | head -n 1)
          kubectl config current-context
          kubectl cluster-info

      - name: Verify Kubernetes Connection
        run: |
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          echo "Current Context:"
          kubectl config current-context
          echo "Cluster Info:"
          kubectl cluster-info
          echo "KUBECONFIG Environment Variable:"
          echo $KUBECONFIG
          ls -l kubeconfig.yaml

      - name: Verify Kubernetes Access
        run: |
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          kubectl get nodes

      - name: Update Kubernetes Deployment with New Image
        run: |
          kubectl set image deployment/promocode-factory-api promocode-factory-api=${{ env.IMAGE_TAG }} --record
          kubectl rollout status deployment/promocode-factory-api
